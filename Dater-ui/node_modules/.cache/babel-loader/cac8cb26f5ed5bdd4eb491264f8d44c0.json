{"ast":null,"code":"import _extends from \"D:\\\\Dater\\\\Dater\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/extends\";\nvar _jsxFileName = \"D:\\\\Dater\\\\dater\\\\src\\\\components\\\\Snackbar\\\\SnackbarContent.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Snack from \"@material-ui/core/SnackbarContent\";\nimport IconButton from \"@material-ui/core/IconButton\"; // @material-ui/icons\n\nimport Close from \"@material-ui/icons/Close\"; // core components\n\nimport snackbarContentStyle from \"assets/jss/material-dashboard-react/components/snackbarContentStyle.jsx\";\n\nfunction SnackbarContent(_ref) {\n  let props = _extends({}, _ref);\n\n  const classes = props.classes,\n        message = props.message,\n        color = props.color,\n        close = props.close,\n        icon = props.icon,\n        rtlActive = props.rtlActive;\n  var action = [];\n  const messageClasses = classNames({\n    [classes.iconMessage]: icon !== undefined\n  });\n\n  if (close !== undefined) {\n    action = [React.createElement(IconButton, {\n      className: classes.iconButton,\n      key: \"close\",\n      \"aria-label\": \"Close\",\n      color: \"inherit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Close, {\n      className: classes.close,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }))];\n  }\n\n  return React.createElement(Snack, {\n    message: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, icon !== undefined ? React.createElement(props.icon, {\n      className: classes.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }) : null, React.createElement(\"span\", {\n      className: messageClasses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, message)),\n    classes: {\n      root: classes.root + \" \" + classes[color],\n      message: classes.message,\n      action: classNames({\n        [classes.actionRTL]: rtlActive\n      })\n    },\n    action: action,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  });\n}\n\nSnackbarContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  message: PropTypes.node.isRequired,\n  color: PropTypes.oneOf([\"info\", \"success\", \"warning\", \"danger\", \"primary\"]),\n  close: PropTypes.bool,\n  icon: PropTypes.func,\n  rtlActive: PropTypes.bool\n};\nexport default withStyles(snackbarContentStyle)(SnackbarContent);","map":{"version":3,"sources":["D:\\Dater\\dater\\src\\components\\Snackbar\\SnackbarContent.jsx"],"names":["React","PropTypes","classNames","withStyles","Snack","IconButton","Close","snackbarContentStyle","SnackbarContent","props","classes","message","color","close","icon","rtlActive","action","messageClasses","iconMessage","undefined","iconButton","root","actionRTL","propTypes","object","isRequired","node","oneOf","bool","func"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,KAAP,MAAkB,mCAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,0BAAlB,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,yEAAjC;;AAEA,SAASC,eAAT,OAAuC;AAAA,MAATC,KAAS;;AAAA,QAC7BC,OAD6B,GACuBD,KADvB,CAC7BC,OAD6B;AAAA,QACpBC,OADoB,GACuBF,KADvB,CACpBE,OADoB;AAAA,QACXC,KADW,GACuBH,KADvB,CACXG,KADW;AAAA,QACJC,KADI,GACuBJ,KADvB,CACJI,KADI;AAAA,QACGC,IADH,GACuBL,KADvB,CACGK,IADH;AAAA,QACSC,SADT,GACuBN,KADvB,CACSM,SADT;AAErC,MAAIC,MAAM,GAAG,EAAb;AACA,QAAMC,cAAc,GAAGf,UAAU,CAAC;AAChC,KAACQ,OAAO,CAACQ,WAAT,GAAuBJ,IAAI,KAAKK;AADA,GAAD,CAAjC;;AAGA,MAAIN,KAAK,KAAKM,SAAd,EAAyB;AACvBH,IAAAA,MAAM,GAAG,CACP,oBAAC,UAAD;AACE,MAAA,SAAS,EAAEN,OAAO,CAACU,UADrB;AAEE,MAAA,GAAG,EAAC,OAFN;AAGE,oBAAW,OAHb;AAIE,MAAA,KAAK,EAAC,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEV,OAAO,CAACG,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADO,CAAT;AAUD;;AACD,SACE,oBAAC,KAAD;AACE,IAAA,OAAO,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,IAAI,KAAKK,SAAT,GAAqB,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,SAAS,EAAET,OAAO,CAACI,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB,GAA+D,IADlE,EAEE;AAAM,MAAA,SAAS,EAAEG,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCN,OAAlC,CAFF,CAFJ;AAOE,IAAA,OAAO,EAAE;AACPU,MAAAA,IAAI,EAAEX,OAAO,CAACW,IAAR,GAAe,GAAf,GAAqBX,OAAO,CAACE,KAAD,CAD3B;AAEPD,MAAAA,OAAO,EAAED,OAAO,CAACC,OAFV;AAGPK,MAAAA,MAAM,EAAEd,UAAU,CAAC;AAAE,SAACQ,OAAO,CAACY,SAAT,GAAqBP;AAAvB,OAAD;AAHX,KAPX;AAYE,IAAA,MAAM,EAAEC,MAZV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAgBD;;AAEDR,eAAe,CAACe,SAAhB,GAA4B;AAC1Bb,EAAAA,OAAO,EAAET,SAAS,CAACuB,MAAV,CAAiBC,UADA;AAE1Bd,EAAAA,OAAO,EAAEV,SAAS,CAACyB,IAAV,CAAeD,UAFE;AAG1Bb,EAAAA,KAAK,EAAEX,SAAS,CAAC0B,KAAV,CAAgB,CAAC,MAAD,EAAS,SAAT,EAAoB,SAApB,EAA+B,QAA/B,EAAyC,SAAzC,CAAhB,CAHmB;AAI1Bd,EAAAA,KAAK,EAAEZ,SAAS,CAAC2B,IAJS;AAK1Bd,EAAAA,IAAI,EAAEb,SAAS,CAAC4B,IALU;AAM1Bd,EAAAA,SAAS,EAAEd,SAAS,CAAC2B;AANK,CAA5B;AASA,eAAezB,UAAU,CAACI,oBAAD,CAAV,CAAiCC,eAAjC,CAAf","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\n// @material-ui/core components\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Snack from \"@material-ui/core/SnackbarContent\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n// @material-ui/icons\r\nimport Close from \"@material-ui/icons/Close\";\r\n// core components\r\nimport snackbarContentStyle from \"assets/jss/material-dashboard-react/components/snackbarContentStyle.jsx\";\r\n\r\nfunction SnackbarContent({ ...props }) {\r\n  const { classes, message, color, close, icon, rtlActive } = props;\r\n  var action = [];\r\n  const messageClasses = classNames({\r\n    [classes.iconMessage]: icon !== undefined\r\n  });\r\n  if (close !== undefined) {\r\n    action = [\r\n      <IconButton\r\n        className={classes.iconButton}\r\n        key=\"close\"\r\n        aria-label=\"Close\"\r\n        color=\"inherit\"\r\n      >\r\n        <Close className={classes.close} />\r\n      </IconButton>\r\n    ];\r\n  }\r\n  return (\r\n    <Snack\r\n      message={\r\n        <div>\r\n          {icon !== undefined ? <props.icon className={classes.icon} /> : null}\r\n          <span className={messageClasses}>{message}</span>\r\n        </div>\r\n      }\r\n      classes={{\r\n        root: classes.root + \" \" + classes[color],\r\n        message: classes.message,\r\n        action: classNames({ [classes.actionRTL]: rtlActive })\r\n      }}\r\n      action={action}\r\n    />\r\n  );\r\n}\r\n\r\nSnackbarContent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  message: PropTypes.node.isRequired,\r\n  color: PropTypes.oneOf([\"info\", \"success\", \"warning\", \"danger\", \"primary\"]),\r\n  close: PropTypes.bool,\r\n  icon: PropTypes.func,\r\n  rtlActive: PropTypes.bool\r\n};\r\n\r\nexport default withStyles(snackbarContentStyle)(SnackbarContent);\r\n"]},"metadata":{},"sourceType":"module"}