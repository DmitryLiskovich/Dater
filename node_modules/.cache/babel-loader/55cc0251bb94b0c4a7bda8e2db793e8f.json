{"ast":null,"code":"import _objectWithoutProperties from \"D:\\\\Dater\\\\Dater\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\Dater\\\\dater\\\\src\\\\layouts\\\\Admin.jsx\";\n\n/* eslint-disable */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Switch, Route, Redirect } from \"react-router-dom\"; // creates a beautiful scrollbar\n\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\"; // core components\n\nimport Navbar from \"components/Navbars/Navbar.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\nimport routes from \"routes.js\";\nimport dashboardStyle from \"assets/jss/material-dashboard-react/layouts/dashboardStyle.jsx\";\nimport image from \"assets/img/sidebar-2.jpg\";\nimport logo from \"assets/img/reactlogo.png\";\nconst switchRoutes = React.createElement(Switch, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, routes.map((prop, key) => {\n  if (prop.layout === \"/admin\") {\n    return React.createElement(Route, {\n      path: prop.layout + prop.path,\n      component: prop.component,\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n  }\n}));\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleImageClick = image => {\n      this.setState({\n        image: image\n      });\n    };\n\n    this.handleColorClick = color => {\n      this.setState({\n        color: color\n      });\n    };\n\n    this.handleFixedClick = () => {\n      if (this.state.fixedClasses === \"dropdown\") {\n        this.setState({\n          fixedClasses: \"dropdown show\"\n        });\n      } else {\n        this.setState({\n          fixedClasses: \"dropdown\"\n        });\n      }\n    };\n\n    this.handleDrawerToggle = () => {\n      this.setState({\n        mobileOpen: !this.state.mobileOpen\n      });\n    };\n\n    this.resizeFunction = () => {\n      if (window.innerWidth >= 960) {\n        this.setState({\n          mobileOpen: false\n        });\n      }\n    };\n\n    this.state = {\n      image: image,\n      color: \"blue\",\n      hasImage: true,\n      fixedClasses: \"dropdown show\",\n      mobileOpen: false\n    };\n  }\n\n  getRoute() {\n    return this.props.location.pathname !== \"/admin/maps\";\n  }\n\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      const ps = new PerfectScrollbar(this.refs.mainPanel);\n    }\n\n    window.addEventListener(\"resize\", this.resizeFunction);\n  }\n\n  componentDidUpdate(e) {\n    if (e.history.location.pathname !== e.location.pathname) {\n      this.refs.mainPanel.scrollTop = 0;\n\n      if (this.state.mobileOpen) {\n        this.setState({\n          mobileOpen: false\n        });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.resizeFunction);\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          rest = _objectWithoutProperties(_this$props, [\"classes\"]);\n\n    return React.createElement(\"div\", {\n      className: classes.wrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Sidebar, Object.assign({\n      routes: routes,\n      logoText: \"Dream Team\",\n      logo: logo,\n      image: this.state.image,\n      handleDrawerToggle: this.handleDrawerToggle,\n      open: this.state.mobileOpen,\n      color: this.state.color\n    }, rest, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: classes.mainPanel,\n      ref: \"mainPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Navbar, Object.assign({\n      routes: routes,\n      handleDrawerToggle: this.handleDrawerToggle\n    }, rest, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), this.getRoute() ? React.createElement(\"div\", {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, switchRoutes)) : React.createElement(\"div\", {\n      className: classes.map,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, switchRoutes), this.getRoute() ? React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }) : null, React.createElement(FixedPlugin, {\n      handleImageClick: this.handleImageClick,\n      handleColorClick: this.handleColorClick,\n      bgColor: this.state[\"color\"],\n      bgImage: this.state[\"image\"],\n      handleFixedClick: this.handleFixedClick,\n      fixedClasses: this.state.fixedClasses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })));\n  }\n\n}\n\nDashboard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(dashboardStyle)(Dashboard);","map":{"version":3,"sources":["D:\\Dater\\dater\\src\\layouts\\Admin.jsx"],"names":["React","PropTypes","Switch","Route","Redirect","PerfectScrollbar","withStyles","Navbar","Footer","Sidebar","FixedPlugin","routes","dashboardStyle","image","logo","switchRoutes","map","prop","key","layout","path","component","Dashboard","Component","constructor","props","handleImageClick","setState","handleColorClick","color","handleFixedClick","state","fixedClasses","handleDrawerToggle","mobileOpen","resizeFunction","window","innerWidth","hasImage","getRoute","location","pathname","componentDidMount","navigator","platform","indexOf","ps","refs","mainPanel","addEventListener","componentDidUpdate","e","history","scrollTop","componentWillUnmount","removeEventListener","render","classes","rest","wrapper","content","container","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["/* eslint-disable */\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n// creates a beautiful scrollbar\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\r\n// @material-ui/core components\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n// core components\r\nimport Navbar from \"components/Navbars/Navbar.jsx\";\r\nimport Footer from \"components/Footer/Footer.jsx\";\r\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\r\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\r\n\r\nimport routes from \"routes.js\";\r\n\r\nimport dashboardStyle from \"assets/jss/material-dashboard-react/layouts/dashboardStyle.jsx\";\r\n\r\nimport image from \"assets/img/sidebar-2.jpg\";\r\nimport logo from \"assets/img/reactlogo.png\";\r\n\r\nconst switchRoutes = (\r\n  <Switch>\r\n    {routes.map((prop, key) => {\r\n      if (prop.layout === \"/admin\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      }\r\n    })}\r\n  </Switch>\r\n);\r\n\r\nclass Dashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      image: image,\r\n      color: \"blue\",\r\n      hasImage: true,\r\n      fixedClasses: \"dropdown show\",\r\n      mobileOpen: false\r\n    };\r\n  }\r\n  handleImageClick = image => {\r\n    this.setState({ image: image });\r\n  };\r\n  handleColorClick = color => {\r\n    this.setState({ color: color });\r\n  };\r\n  handleFixedClick = () => {\r\n    if (this.state.fixedClasses === \"dropdown\") {\r\n      this.setState({ fixedClasses: \"dropdown show\" });\r\n    } else {\r\n      this.setState({ fixedClasses: \"dropdown\" });\r\n    }\r\n  };\r\n  handleDrawerToggle = () => {\r\n    this.setState({ mobileOpen: !this.state.mobileOpen });\r\n  };\r\n  getRoute() {\r\n    return this.props.location.pathname !== \"/admin/maps\";\r\n  }\r\n  resizeFunction = () => {\r\n    if (window.innerWidth >= 960) {\r\n      this.setState({ mobileOpen: false });\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      const ps = new PerfectScrollbar(this.refs.mainPanel);\r\n    }\r\n    window.addEventListener(\"resize\", this.resizeFunction);\r\n  }\r\n  componentDidUpdate(e) {\r\n    if (e.history.location.pathname !== e.location.pathname) {\r\n      this.refs.mainPanel.scrollTop = 0;\r\n      if (this.state.mobileOpen) {\r\n        this.setState({ mobileOpen: false });\r\n      }\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.resizeFunction);\r\n  }\r\n  render() {\r\n    const { classes, ...rest } = this.props;\r\n    return (\r\n      <div className={classes.wrapper}>\r\n        <Sidebar\r\n          routes={routes}\r\n          logoText={\"Dream Team\"}\r\n          logo={logo}\r\n          image={this.state.image}\r\n          handleDrawerToggle={this.handleDrawerToggle}\r\n          open={this.state.mobileOpen}\r\n          color={this.state.color}\r\n          {...rest}\r\n        />\r\n        <div className={classes.mainPanel} ref=\"mainPanel\">\r\n          <Navbar\r\n            routes={routes}\r\n            handleDrawerToggle={this.handleDrawerToggle}\r\n            {...rest}\r\n          />\r\n          {/* On the /maps route we want the map to be on full screen - this is not possible if the content and conatiner classes are present because they have some paddings which would make the map smaller */}\r\n          {this.getRoute() ? (\r\n            <div className={classes.content}>\r\n              <div className={classes.container}>{switchRoutes}</div>\r\n            </div>\r\n          ) : (\r\n            <div className={classes.map}>{switchRoutes}</div>\r\n          )}\r\n          {this.getRoute() ? <Footer /> : null}\r\n          <FixedPlugin\r\n            handleImageClick={this.handleImageClick}\r\n            handleColorClick={this.handleColorClick}\r\n            bgColor={this.state[\"color\"]}\r\n            bgImage={this.state[\"image\"]}\r\n            handleFixedClick={this.handleFixedClick}\r\n            fixedClasses={this.state.fixedClasses}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(dashboardStyle)(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}