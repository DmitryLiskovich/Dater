{"ast":null,"code":"import _extends from \"D:\\\\Dater\\\\Dater\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/extends\";\nvar _jsxFileName = \"D:\\\\Dater\\\\dater\\\\src\\\\components\\\\Sidebar\\\\Sidebar.jsx\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\"; // core components\n\nimport AdminNavbarLinks from \"components/Navbars/AdminNavbarLinks.jsx\";\nimport RTLNavbarLinks from \"components/Navbars/RTLNavbarLinks.jsx\";\nimport sidebarStyle from \"assets/jss/material-dashboard-react/components/sidebarStyle.jsx\";\n\nconst Sidebar = (_ref) => {\n  let props = _extends({}, _ref);\n\n  // verifies if routeName is the one active (in browser input)\n  function activeRoute(routeName) {\n    return props.location.pathname.indexOf(routeName) > -1 ? true : false;\n  }\n\n  const classes = props.classes,\n        color = props.color,\n        logo = props.logo,\n        image = props.image,\n        logoText = props.logoText,\n        routes = props.routes;\n  var links = React.createElement(List, {\n    className: classes.list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, routes.map((prop, key) => {\n    var activePro = \" \";\n    var listItemClasses;\n\n    if (prop.path === \"/upgrade-to-pro\") {\n      activePro = classes.activePro + \" \";\n      listItemClasses = classNames({\n        [\" \" + classes[color]]: true\n      });\n    } else {\n      listItemClasses = classNames({\n        [\" \" + classes[color]]: activeRoute(prop.layout + prop.path)\n      });\n    }\n\n    const whiteFontClasses = classNames({\n      [\" \" + classes.whiteFont]: activeRoute(prop.layout + prop.path)\n    });\n    return React.createElement(NavLink, {\n      to: prop.layout + prop.path,\n      className: activePro + classes.item,\n      activeClassName: \"active\",\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      button: true,\n      className: classes.itemLink + listItemClasses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, typeof prop.icon === \"string\" ? React.createElement(Icon, {\n      className: classNames(classes.itemIcon, whiteFontClasses, {\n        [classes.itemIconRTL]: props.rtlActive\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, prop.icon) : React.createElement(prop.icon, {\n      className: classNames(classes.itemIcon, whiteFontClasses, {\n        [classes.itemIconRTL]: props.rtlActive\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(ListItemText, {\n      primary: props.rtlActive ? prop.rtlName : prop.name,\n      className: classNames(classes.itemText, whiteFontClasses, {\n        [classes.itemTextRTL]: props.rtlActive\n      }),\n      disableTypography: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })));\n  }));\n  var brand = React.createElement(\"div\", {\n    className: classes.logo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"https://github.com/DatVu23/Dater\",\n    className: classNames(classes.logoLink, {\n      [classes.logoLinkRTL]: props.rtlActive\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.logoImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: logo,\n    alt: \"logo\",\n    className: classes.img,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), logoText));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Hidden, {\n    mdUp: true,\n    implementation: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    variant: \"temporary\",\n    anchor: props.rtlActive ? \"left\" : \"right\",\n    open: props.open,\n    classes: {\n      paper: classNames(classes.drawerPaper, {\n        [classes.drawerPaperRTL]: props.rtlActive\n      })\n    },\n    onClose: props.handleDrawerToggle,\n    ModalProps: {\n      keepMounted: true // Better open performance on mobile.\n\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, brand, React.createElement(\"div\", {\n    className: classes.sidebarWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, props.rtlActive ? React.createElement(RTLNavbarLinks, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }) : React.createElement(AdminNavbarLinks, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), links), image !== undefined ? React.createElement(\"div\", {\n    className: classes.background,\n    style: {\n      backgroundImage: \"url(\" + image + \")\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }) : null)), React.createElement(Hidden, {\n    smDown: true,\n    implementation: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    anchor: props.rtlActive ? \"right\" : \"left\",\n    variant: \"permanent\",\n    open: true,\n    classes: {\n      paper: classNames(classes.drawerPaper, {\n        [classes.drawerPaperRTL]: props.rtlActive\n      })\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, brand, React.createElement(\"div\", {\n    className: classes.sidebarWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, links), image !== undefined ? React.createElement(\"div\", {\n    className: classes.background,\n    style: {\n      backgroundImage: \"url(\" + image + \")\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }) : null)));\n};\n\nSidebar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(sidebarStyle)(Sidebar);","map":{"version":3,"sources":["D:\\Dater\\dater\\src\\components\\Sidebar\\Sidebar.jsx"],"names":["React","classNames","PropTypes","NavLink","withStyles","Drawer","Hidden","List","ListItem","ListItemText","Icon","AdminNavbarLinks","RTLNavbarLinks","sidebarStyle","Sidebar","props","activeRoute","routeName","location","pathname","indexOf","classes","color","logo","image","logoText","routes","links","list","map","prop","key","activePro","listItemClasses","path","layout","whiteFontClasses","whiteFont","item","itemLink","icon","itemIcon","itemIconRTL","rtlActive","rtlName","name","itemText","itemTextRTL","brand","logoLink","logoLinkRTL","logoImage","img","open","paper","drawerPaper","drawerPaperRTL","handleDrawerToggle","keepMounted","sidebarWrapper","undefined","background","backgroundImage","propTypes","object","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,kBAAxB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB,C,CACA;;AACA,OAAOC,gBAAP,MAA6B,yCAA7B;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AAEA,OAAOC,YAAP,MAAyB,iEAAzB;;AAEA,MAAMC,OAAO,GAAG,UAAkB;AAAA,MAAZC,KAAY;;AAChC;AACA,WAASC,WAAT,CAAqBC,SAArB,EAAgC;AAC9B,WAAOF,KAAK,CAACG,QAAN,CAAeC,QAAf,CAAwBC,OAAxB,CAAgCH,SAAhC,IAA6C,CAAC,CAA9C,GAAkD,IAAlD,GAAyD,KAAhE;AACD;;AAJ+B,QAKxBI,OALwB,GAK0BN,KAL1B,CAKxBM,OALwB;AAAA,QAKfC,KALe,GAK0BP,KAL1B,CAKfO,KALe;AAAA,QAKRC,IALQ,GAK0BR,KAL1B,CAKRQ,IALQ;AAAA,QAKFC,KALE,GAK0BT,KAL1B,CAKFS,KALE;AAAA,QAKKC,QALL,GAK0BV,KAL1B,CAKKU,QALL;AAAA,QAKeC,MALf,GAK0BX,KAL1B,CAKeW,MALf;AAMhC,MAAIC,KAAK,GACP,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEN,OAAO,CAACO,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,MAAM,CAACG,GAAP,CAAW,CAACC,IAAD,EAAOC,GAAP,KAAe;AACzB,QAAIC,SAAS,GAAG,GAAhB;AACA,QAAIC,eAAJ;;AACA,QAAIH,IAAI,CAACI,IAAL,KAAc,iBAAlB,EAAqC;AACnCF,MAAAA,SAAS,GAAGX,OAAO,CAACW,SAAR,GAAoB,GAAhC;AACAC,MAAAA,eAAe,GAAGhC,UAAU,CAAC;AAC3B,SAAC,MAAMoB,OAAO,CAACC,KAAD,CAAd,GAAwB;AADG,OAAD,CAA5B;AAGD,KALD,MAKO;AACLW,MAAAA,eAAe,GAAGhC,UAAU,CAAC;AAC3B,SAAC,MAAMoB,OAAO,CAACC,KAAD,CAAd,GAAwBN,WAAW,CAACc,IAAI,CAACK,MAAL,GAAcL,IAAI,CAACI,IAApB;AADR,OAAD,CAA5B;AAGD;;AACD,UAAME,gBAAgB,GAAGnC,UAAU,CAAC;AAClC,OAAC,MAAMoB,OAAO,CAACgB,SAAf,GAA2BrB,WAAW,CAACc,IAAI,CAACK,MAAL,GAAcL,IAAI,CAACI,IAApB;AADJ,KAAD,CAAnC;AAGA,WACE,oBAAC,OAAD;AACE,MAAA,EAAE,EAAEJ,IAAI,CAACK,MAAL,GAAcL,IAAI,CAACI,IADzB;AAEE,MAAA,SAAS,EAAEF,SAAS,GAAGX,OAAO,CAACiB,IAFjC;AAGE,MAAA,eAAe,EAAC,QAHlB;AAIE,MAAA,GAAG,EAAEP,GAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,QAAD;AAAU,MAAA,MAAM,MAAhB;AAAiB,MAAA,SAAS,EAAEV,OAAO,CAACkB,QAAR,GAAmBN,eAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,OAAOH,IAAI,CAACU,IAAZ,KAAqB,QAArB,GACC,oBAAC,IAAD;AACE,MAAA,SAAS,EAAEvC,UAAU,CAACoB,OAAO,CAACoB,QAAT,EAAmBL,gBAAnB,EAAqC;AACxD,SAACf,OAAO,CAACqB,WAAT,GAAuB3B,KAAK,CAAC4B;AAD2B,OAArC,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGb,IAAI,CAACU,IALR,CADD,GASC,oBAAC,IAAD,CAAM,IAAN;AACE,MAAA,SAAS,EAAEvC,UAAU,CAACoB,OAAO,CAACoB,QAAT,EAAmBL,gBAAnB,EAAqC;AACxD,SAACf,OAAO,CAACqB,WAAT,GAAuB3B,KAAK,CAAC4B;AAD2B,OAArC,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,EAgBE,oBAAC,YAAD;AACE,MAAA,OAAO,EACL5B,KAAK,CAAC4B,SAAN,GAAkBb,IAAI,CAACc,OAAvB,GAAiCd,IAAI,CAACe,IAF1C;AAIE,MAAA,SAAS,EAAE5C,UAAU,CAACoB,OAAO,CAACyB,QAAT,EAAmBV,gBAAnB,EAAqC;AACxD,SAACf,OAAO,CAAC0B,WAAT,GAAuBhC,KAAK,CAAC4B;AAD2B,OAArC,CAJvB;AAOE,MAAA,iBAAiB,EAAE,IAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,CANF,CADF;AAmCD,GAnDA,CADH,CADF;AAwDA,MAAIK,KAAK,GACP;AAAK,IAAA,SAAS,EAAE3B,OAAO,CAACE,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,kCADP;AAEE,IAAA,SAAS,EAAEtB,UAAU,CAACoB,OAAO,CAAC4B,QAAT,EAAmB;AACtC,OAAC5B,OAAO,CAAC6B,WAAT,GAAuBnC,KAAK,CAAC4B;AADS,KAAnB,CAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAK,IAAA,SAAS,EAAEtB,OAAO,CAAC8B,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAE5B,IAAV;AAAgB,IAAA,GAAG,EAAC,MAApB;AAA2B,IAAA,SAAS,EAAEF,OAAO,CAAC+B,GAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,EASG3B,QATH,CADF,CADF;AAeA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,MAAZ;AAAa,IAAA,cAAc,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,MAAM,EAAEV,KAAK,CAAC4B,SAAN,GAAkB,MAAlB,GAA2B,OAFrC;AAGE,IAAA,IAAI,EAAE5B,KAAK,CAACsC,IAHd;AAIE,IAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAErD,UAAU,CAACoB,OAAO,CAACkC,WAAT,EAAsB;AACrC,SAAClC,OAAO,CAACmC,cAAT,GAA0BzC,KAAK,CAAC4B;AADK,OAAtB;AADV,KAJX;AASE,IAAA,OAAO,EAAE5B,KAAK,CAAC0C,kBATjB;AAUE,IAAA,UAAU,EAAE;AACVC,MAAAA,WAAW,EAAE,IADH,CACQ;;AADR,KAVd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcGV,KAdH,EAeE;AAAK,IAAA,SAAS,EAAE3B,OAAO,CAACsC,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG5C,KAAK,CAAC4B,SAAN,GAAkB,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,GAAuC,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD1C,EAEGhB,KAFH,CAfF,EAmBGH,KAAK,KAAKoC,SAAV,GACC;AACE,IAAA,SAAS,EAAEvC,OAAO,CAACwC,UADrB;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE,SAAStC,KAAT,GAAiB;AAApC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAKG,IAxBN,CADF,CADF,EA6BE,oBAAC,MAAD;AAAQ,IAAA,MAAM,MAAd;AAAe,IAAA,cAAc,EAAC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,MAAM,EAAET,KAAK,CAAC4B,SAAN,GAAkB,OAAlB,GAA4B,MADtC;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,IAAA,IAAI,MAHN;AAIE,IAAA,OAAO,EAAE;AACPW,MAAAA,KAAK,EAAErD,UAAU,CAACoB,OAAO,CAACkC,WAAT,EAAsB;AACrC,SAAClC,OAAO,CAACmC,cAAT,GAA0BzC,KAAK,CAAC4B;AADK,OAAtB;AADV,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGK,KAVH,EAWE;AAAK,IAAA,SAAS,EAAE3B,OAAO,CAACsC,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyChC,KAAzC,CAXF,EAYGH,KAAK,KAAKoC,SAAV,GACC;AACE,IAAA,SAAS,EAAEvC,OAAO,CAACwC,UADrB;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE,SAAStC,KAAT,GAAiB;AAApC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAKG,IAjBN,CADF,CA7BF,CADF;AAqDD,CAlID;;AAoIAV,OAAO,CAACiD,SAAR,GAAoB;AAClB1C,EAAAA,OAAO,EAAEnB,SAAS,CAAC8D,MAAV,CAAiBC;AADR,CAApB;AAIA,eAAe7D,UAAU,CAACS,YAAD,CAAV,CAAyBC,OAAzB,CAAf","sourcesContent":["import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { NavLink } from \"react-router-dom\";\r\n// @material-ui/core components\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n// core components\r\nimport AdminNavbarLinks from \"components/Navbars/AdminNavbarLinks.jsx\";\r\nimport RTLNavbarLinks from \"components/Navbars/RTLNavbarLinks.jsx\";\r\n\r\nimport sidebarStyle from \"assets/jss/material-dashboard-react/components/sidebarStyle.jsx\";\r\n\r\nconst Sidebar = ({ ...props }) => {\r\n  // verifies if routeName is the one active (in browser input)\r\n  function activeRoute(routeName) {\r\n    return props.location.pathname.indexOf(routeName) > -1 ? true : false;\r\n  }\r\n  const { classes, color, logo, image, logoText, routes } = props;\r\n  var links = (\r\n    <List className={classes.list}>\r\n      {routes.map((prop, key) => {\r\n        var activePro = \" \";\r\n        var listItemClasses;\r\n        if (prop.path === \"/upgrade-to-pro\") {\r\n          activePro = classes.activePro + \" \";\r\n          listItemClasses = classNames({\r\n            [\" \" + classes[color]]: true\r\n          });\r\n        } else {\r\n          listItemClasses = classNames({\r\n            [\" \" + classes[color]]: activeRoute(prop.layout + prop.path)\r\n          });\r\n        }\r\n        const whiteFontClasses = classNames({\r\n          [\" \" + classes.whiteFont]: activeRoute(prop.layout + prop.path)\r\n        });\r\n        return (\r\n          <NavLink\r\n            to={prop.layout + prop.path}\r\n            className={activePro + classes.item}\r\n            activeClassName=\"active\"\r\n            key={key}\r\n          >\r\n            <ListItem button className={classes.itemLink + listItemClasses}>\r\n              {typeof prop.icon === \"string\" ? (\r\n                <Icon\r\n                  className={classNames(classes.itemIcon, whiteFontClasses, {\r\n                    [classes.itemIconRTL]: props.rtlActive\r\n                  })}\r\n                >\r\n                  {prop.icon}\r\n                </Icon>\r\n              ) : (\r\n                <prop.icon\r\n                  className={classNames(classes.itemIcon, whiteFontClasses, {\r\n                    [classes.itemIconRTL]: props.rtlActive\r\n                  })}\r\n                />\r\n              )}\r\n              <ListItemText\r\n                primary={\r\n                  props.rtlActive ? prop.rtlName : prop.name\r\n                }\r\n                className={classNames(classes.itemText, whiteFontClasses, {\r\n                  [classes.itemTextRTL]: props.rtlActive\r\n                })}\r\n                disableTypography={true}\r\n              />\r\n            </ListItem>\r\n          </NavLink>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n  var brand = (\r\n    <div className={classes.logo}>\r\n      <a\r\n        href=\"https://github.com/DatVu23/Dater\"\r\n        className={classNames(classes.logoLink, {\r\n          [classes.logoLinkRTL]: props.rtlActive\r\n        })}\r\n      >\r\n        <div className={classes.logoImage}>\r\n          <img src={logo} alt=\"logo\" className={classes.img} />\r\n        </div>\r\n        {logoText}\r\n      </a>\r\n    </div>\r\n  );\r\n  return (\r\n    <div>\r\n      <Hidden mdUp implementation=\"css\">\r\n        <Drawer\r\n          variant=\"temporary\"\r\n          anchor={props.rtlActive ? \"left\" : \"right\"}\r\n          open={props.open}\r\n          classes={{\r\n            paper: classNames(classes.drawerPaper, {\r\n              [classes.drawerPaperRTL]: props.rtlActive\r\n            })\r\n          }}\r\n          onClose={props.handleDrawerToggle}\r\n          ModalProps={{\r\n            keepMounted: true // Better open performance on mobile.\r\n          }}\r\n        >\r\n          {brand}\r\n          <div className={classes.sidebarWrapper}>\r\n            {props.rtlActive ? <RTLNavbarLinks /> : <AdminNavbarLinks />}\r\n            {links}\r\n          </div>\r\n          {image !== undefined ? (\r\n            <div\r\n              className={classes.background}\r\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\r\n            />\r\n          ) : null}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden smDown implementation=\"css\">\r\n        <Drawer\r\n          anchor={props.rtlActive ? \"right\" : \"left\"}\r\n          variant=\"permanent\"\r\n          open\r\n          classes={{\r\n            paper: classNames(classes.drawerPaper, {\r\n              [classes.drawerPaperRTL]: props.rtlActive\r\n            })\r\n          }}\r\n        >\r\n          {brand}\r\n          <div className={classes.sidebarWrapper}>{links}</div>\r\n          {image !== undefined ? (\r\n            <div\r\n              className={classes.background}\r\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\r\n            />\r\n          ) : null}\r\n        </Drawer>\r\n      </Hidden>\r\n    </div>\r\n  );\r\n};\r\n\r\nSidebar.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(sidebarStyle)(Sidebar);\r\n"]},"metadata":{},"sourceType":"module"}